[tool.poetry]
name = "df-gettext-toolkit"
version = "0.6.5"
description = "Toolset to convert text extracted from DF to gettext format and aback"
authors = ["insolor <insolor@gmail.com>", "aNNiPAk <annipak@yandex.ru>", "shevernitskiy <hwork@list.ru>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
typer = "^0.9.0"
Unidecode = "^1.2.0"
loguru = "^0.7.0"
babel = "^2.12.1"
requests = "^2.31.0"
jinja2 = "^3.1.2"
cairosvg = "^2.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
flake8 = "^6.1.0"
black = "^23.3.0"
isort = "^5.12.0"
coverage = "^7.2.7"
refurb = "^1.19.0"
ruff = "^0.0.284"

[tool.poetry.scripts]
df_gettext_toolkit = "df_gettext_toolkit.cli:app"
convert_hardcoded = "df_gettext_toolkit.convert.hardcoded_po_to_csv:app"
convert_objects = "df_gettext_toolkit.convert.objects_po_to_csv:app"
create_pot = "df_gettext_toolkit.create_pot.cli:app"
create_mod = "df_gettext_toolkit.create_mod.cli:app"
csv_bisect = "df_gettext_toolkit.csv_bisect.cli:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
line-length = 120
select = ["E", "F", "UP"]
ignore = ["UP015"]
unfixable = ["F401"]
target-version = "py310"
